# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: "php:7.4"

# Configuration of the build of the application.
build:
  flavor: composer

dependencies:
  php:
    composer/composer: '^2'
    wp-cli/wp-cli-bundle: "^2.4.0"

runtime:
  extensions:
    - redis
hooks:
  build: |
    set -e
    # Copy manually-provided plugins into the plugins directory.
    # This allows manually-provided and composer-provided plugins to coexist.
    rsync -a plugins/* web/wp-content/plugins/
    if [ -f wordpress/wp-content/plugins/redis-cache/includes/object-cache.php ]; then
      cp web/wp-content/plugins/redis-cache/includes/object-cache.php web/wp-content/object-cache.php
    fi  

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  database: "db:mysql"
  redis: "rediscache:redis"

# The configuration of app when it is exposed to the web.
web:
  locations:
    "/":
      # The public directory of the app, relative to its root.
      root: "web"
      # The front-controller script to send non-static requests to.
      passthru: "/index.php"
      # Wordpress has multiple roots (wp-admin) so the following is required
      index:
        - "index.php"
      # The number of seconds whitelisted (static) content should be cached.
      expires: 600
      scripts: true
      allow: true
      rules:
        ^/composer\.json:
          allow: false
        ^/wp/license\.txt$:
          allow: false
        ^/wp/readme\.html$:
          allow: false
        '^/robots\.txt$':
          allow: true
        '^/sitemap\.xml$':
          allow: true
        ################################
        ###        WORDPRESS        ###
        ###############################
        # We need to allow requests to wp-login.php to pass through
        # Multisites do not respect the WP_SITEURL constant in Wp-config. Since the vast majority of
        # migrated multisites were not set up using this constant, their siteurl location is hard-coded into the db
        # In addition, directory-based multisites include the virtual directory before the wp-login.php
        # Because of this, WordPress and plugins are unaware that core files are located in /wp/. This allows those
        # sites to continue to function properly, and single sites are unaffected as they respect the WP_SITEURL
        # constant. New multisites set up with the new paradigm will have their siteurl setting set correctly and will
        # also not be affected by this setting.
        '^/(?!wp/)([_0-9a-zA-Z-]+/)?wp-(?<wproot>[a-z\-]+).php$':
          allow: true
          scripts: true
          passthru: '/wp/wp-$wproot.php'
        # Allows directory-based multisites to still access the wp-admin and wp-include locations
        '^/(?!wp/)([_0-9a-zA-Z-]+/)?(?<adminrewrite>wp-(admin|includes).*)':
          allow: true
          scripts: true
          passthru: '/wp/$adminrewrite'
        '^/([_0-9a-zA-Z-]+)/wp-content/(?<content>.*)':
          allow: true
          scripts: false
          passthru: '/wp-content/$content'
          expires: 1w
    # Prevents scripts from running inside of the wp-content directory (and subdirectories) but allows media to still be
    # available
    "/wp-content":
      root: "web/wp-content"
      allow: false
      scripts: false
      rules:
        # Allow access to common static files.
        '(?<!\-lock)\.(?i:jpe?g|gif|png|svg|bmp|ico|css|js(?:on)?|eot|ttf|woff|woff2|pdf|docx?|xlsx?|pp[st]x?|psd|odt|key|mp[2-5g]|m4[av]|og[gv]|wav|mov|wm[av]|avi|3g[p2])$':
          allow: true
          expires: 1w
    "/presentations/intro-infosec-drupalcon2020":
      index:
        - "index.html"

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
  "web/wp-content/cache":
    source: local
    source_path: "cache"
  "web/wp-content/uploads":
    source: local
    source_path: "uploads"


source:
  operations:
    auto-update:
      command: |
        curl -fsS https://raw.githubusercontent.com/platformsh/source-operations/main/setup.sh | { bash /dev/fd/3 sop-autoupdate; } 3<&0

